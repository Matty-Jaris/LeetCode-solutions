# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def dfs (root):
            if not root:
                return [True, 0]
            left = dfs(root.left)
            right = dfs(root.right)
            balanced = left[0] and right[0] and (abs(left[1]-right[1]) <= 1)
            return [balanced, 1 + max(left[1], right[1])]
        return dfs (root) [0]

# Zavedena rekurzivní DFS funkce pro určení výškové vyváženosti stromu
# Vrací bool pro vyváženost a výšku každého podstromu
# Porovnává výšky levého a pravého podstromu pro každý uzel
# Využívá návratové hodnoty z DFS pro efektivní vyhodnocení stromu
# Finální výsledek je získán z kořene stromu
