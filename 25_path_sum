# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        def dfs (root,curSum):
            if not root:
                return False
            curSum += root.val
            if not root.left and not root.right and curSum == targetSum:
                return True

            return dfs(root.left,curSum) or dfs(root.right,curSum)
        return dfs (root, 0)
# Definujeme pomocnou rekurzivní funkci 'dfs', která přijímá aktuální uzel a kumulativní součet hodnot od kořene.
# Pokud je aktuální uzel prázdný, cesta není platná a vracíme False.
# Přičítáme hodnotu aktuálního uzlu ke kumulativnímu součtu.
# Pokud dosáhneme listu (uzel bez levého a pravého potomka) a kumulativní součet se rovná targetSum, vracíme True.
# Rekurzivně voláme funkci pro levého a pravého potomka a vracíme True, pokud některá cesta vede k targetSum.
