class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        res = [[1]]
        for i in range(rowIndex):
            temp = [0] + res[-1] + [0]
            row = []
            for j in range(len(res[-1])+1):
                row.append (temp[j]+temp[j+1])
            res.append (row)
        return res [-1]

# Inicializujeme výsledný seznam s prvním řádkem Pascalova trojúhelníku, tj. [1].
# Iterujeme pro každý řádek až do řádku odpovídajícího indexu rowIndex.
# Pro výpočet nového řádku obalíme poslední řádek nulou zleva a zprava.
# Pro každý index v obaleném řádku spočítáme součet dvou sousedních hodnot a uložíme výsledek do nového řádku.
# Přidáme vygenerovaný řádek do výsledného seznamu.
# Vrátíme poslední řádek výsledného seznamu, který odpovídá řádku s indexem rowIndex.
